# OpenSSL include path and compiler settings.
if(WIN32)
	# Append OpenSSL paths for the configurations
	SET(CMAKE_CXX_FLAGS_RELEASE			"${CMAKE_CXX_FLAGS_RELEASE}			/I\"${openssldir}/include\"")
	SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO	"${CMAKE_CXX_FLAGS_RELWITHDEBINFO}	/I\"${openssldir}/include\"")
	SET(CMAKE_CXX_FLAGS_DEBUG			"${CMAKE_CXX_FLAGS_DEBUG}			/I\"${openssldir}-debug/include\"")
	SET(CMAKE_CXX_FLAGS_SDKDEBUG		"${CMAKE_CXX_FLAGS_SDKDEBUG}		/I\"${openssldir}-debug/include\"")
elseif(APPLE)
else() # linux
	SET(CMAKE_CXX_FLAGS	"${CMAKE_CXX_FLAGS} -I${openssldir}/include")
endif()


# OpenSSL linker settings.
if(WIN32)
	
	SET(OPENSSL_LINK_FLAGS_RELEASE			"/LIBPATH:\"${openssldir}/lib\"")
	SET(OPENSSL_LINK_FLAGS_RELWITHDEBINFO	"/LIBPATH:\"${openssldir}/lib\"")
	SET(OPENSSL_LINK_FLAGS_DEBUG			"/LIBPATH:\"${openssldir}-debug/lib\"")
	SET(OPENSSL_LINK_FLAGS_SDKDEBUG			"/LIBPATH:\"${openssldir}-debug/lib\"")
	
	SET(CMAKE_EXE_LINKER_FLAGS_RELEASE			"${CMAKE_EXE_LINKER_FLAGS_RELEASE} ${OPENSSL_LINK_FLAGS_RELEASE}")
	SET(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO	"${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO} ${OPENSSL_LINK_FLAGS_RELWITHDEBINFO}")
	SET(CMAKE_EXE_LINKER_FLAGS_DEBUG			"${CMAKE_EXE_LINKER_FLAGS_DEBUG} ${OPENSSL_LINK_FLAGS_DEBUG}")
	SET(CMAKE_EXE_LINKER_FLAGS_SDKDEBUG			"${CMAKE_EXE_LINKER_FLAGS_SDKDEBUG} ${OPENSSL_LINK_FLAGS_SDKDEBUG}")
	
	SET(CMAKE_MODULE_LINKER_FLAGS_RELEASE			"${CMAKE_MODULE_LINKER_FLAGS_RELEASE} ${OPENSSL_LINK_FLAGS_RELEASE}")
	SET(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO	"${CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO} ${OPENSSL_LINK_FLAGS_RELWITHDEBINFO}")
	SET(CMAKE_MODULE_LINKER_FLAGS_DEBUG				"${CMAKE_MODULE_LINKER_FLAGS_DEBUG} ${OPENSSL_LINK_FLAGS_DEBUG}")
	SET(CMAKE_MODULE_LINKER_FLAGS_SDKDEBUG			"${CMAKE_MODULE_LINKER_FLAGS_SDKDEBUG} ${OPENSSL_LINK_FLAGS_SDKDEBUG}")

	target_link_libraries(${CURRENT_TARGET} 
		libeay32)
		
elseif(APPLE)
	target_link_libraries(${CURRENT_TARGET} 
		"crypto")
else()
	target_link_libraries(${CURRENT_TARGET} 
		"${openssldir}/lib/libcrypto.a")
endif()
